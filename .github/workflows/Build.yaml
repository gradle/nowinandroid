name: Build

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_and_apk:
    name: "Local tests and APKs"
    runs-on: ubuntu-latest

    permissions:
      contents: write

    timeout-minutes: 60

    steps:
      - name: Checkout Declarative Gradle
        uses: actions/checkout@v4
        with:
          repository: 'gradle/declarative-gradle'
          path: 'declarative-gradle'

      - name: Checkout Now in Android
        uses: actions/checkout@v4
        with:
          repository: 'gradle/nowinandroid'
          path: 'now-in-android'

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp now-in-android/.github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Check build-logic
        run: ./now-in-android/gradlew check -p now-in-android/build-logic

      - name: Check spotless
        run: ./now-in-android/gradlew spotlessCheck --init-script gradle/init.gradle.kts --no-configuration-cache -p now-in-android

      - name: Check Dependency Guard
        id: dependencyguard_verify
        continue-on-error: true
        run: ./now-in-android/gradlew dependencyGuard -p now-in-android

      - name: Prevent updating Dependency Guard baselines if this is a fork
        id: checkfork_dependencyguard
        continue-on-error: false
        if: steps.dependencyguard_verify.outcome == 'failure' && github.event.pull_request.head.repo.full_name != github.repository
        run: |
          echo "::error::Dependency Guard failed, please update baselines with: ./gradlew dependencyGuardBaseline" && exit 1

        # Runs if previous job failed
      - name: Generate new Dependency Guard baselines if verification failed and it's a PR
        id: dependencyguard_baseline
        if: steps.dependencyguard_verify.outcome == 'failure' && github.event_name == 'pull_request'
        run: |
          ./now-in-android/gradlew dependencyGuardBaseline -p now-in-android

# TODO: Skip this, the new repo checkout isn't working - probably fixable but unimportant
#      - name: Push new Dependency Guard baselines if available
#        uses: stefanzweifel/git-auto-commit-action@v5
#        if: steps.dependencyguard_baseline.outcome == 'success'
#        with:
#          file_pattern: '**/dependencies/*.txt'
#          disable_globbing: true
#          commit_message: "ðŸ¤– Updates baselines for Dependency Guard"

      - name: Run all local screenshot tests (Roborazzi)
        id: screenshotsverify
        continue-on-error: true
        run: ./now-in-android/gradlew verifyRoborazziDemoDebug -p now-in-android

      - name: Prevent pushing new screenshots if this is a fork
        id: checkfork_screenshots
        continue-on-error: false
        if: steps.screenshotsverify.outcome == 'failure' && github.event.pull_request.head.repo.full_name != github.repository
        run: |
          echo "::error::Screenshot tests failed, please create a PR in your fork first." && exit 1

      # Runs if previous job failed
      - name: Generate new screenshots if verification failed and it's a PR
        id: screenshotsrecord
        if: steps.screenshotsverify.outcome == 'failure' && github.event_name == 'pull_request'
        run: |
          ./now-in-android/gradlew recordRoborazziDemoDebug -p now-in-android -x :app:hiltAggregateDepsDemoDebug -x :app:hiltAggregateDepsDemoDebugUnitTest -x :app:testDemoDebugUnitTest

# TODO: Skip this, the new repo checkout isn't working - probably fixable but unimportant
#      - name: Push new screenshots if available
#        uses: stefanzweifel/git-auto-commit-action@v5
#        if: steps.screenshotsrecord.outcome == 'success'
#        with:
#          file_pattern: '*/*.png'
#          disable_globbing: true
#          commit_message: "ðŸ¤– Updates screenshots"

      # Run local tests after screenshot tests to avoid wrong UP-TO-DATE. TODO: Ignore screenshots.
      - name: Run local tests
        if: always()
        run: ./now-in-android/gradlew testDemoDebug :lint:test -p now-in-android -x :app:hiltAggregateDepsDemoDebug -x :app:hiltAggregateDepsDemoDebugUnitTest -x :app:testDemoDebugUnitTest

# TODO: This won't work until we have flavors working in the declarative app and actually create the variants that app is expecting
#      # Replace task exclusions with `-Pandroidx.baselineprofile.skipgeneration` when
#      # https://android-review.googlesource.com/c/platform/frameworks/support/+/2602790 landed in a
#      # release build
#      - name: Build all build type and flavor permutations
#        run: ./now-in-android/gradlew :app:assemble :benchmarks:assemble
#          -x pixel6Api33ProdNonMinifiedReleaseAndroidTest
#          -x pixel6Api33DemoNonMinifiedReleaseAndroidTest
#          -x collectDemoNonMinifiedReleaseBaselineProfile
#          -x collectProdNonMinifiedReleaseBaselineProfile
#          -p now-in-android

      - name: Upload build outputs (APKs)
        uses: actions/upload-artifact@v4
        with:
          name: APKs
          path: '**/build/outputs/apk/**/*.apk'

      - name: Upload test results (XML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/build/test-results/test*UnitTest/**.xml'

# TODO: less linting required on this branch, full linting requires additional flavors
#        run: ./now-in-android/gradlew :app:lintProdRelease :app-nia-catalog:lintRelease :lint:lint -p now-in-android
      - name: Check lint
        run: ./now-in-android/gradlew :lint:lint -p now-in-android

      - name: Upload lint reports (HTML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-reports
          path: '**/build/reports/lint-results-*.html'

# TODO: Skip badging until we have flavors working in the declarative app
#      - name: Check badging
#        run: ./now-in-android/gradlew :app:checkProdReleaseBadging -p now-in-android

  androidTest:
    runs-on: ubuntu-latest
    timeout-minutes: 55
    strategy:
      matrix:
        api-level: [26, 30]

    steps:
      - name: Delete unnecessary tools ðŸ”§
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          android: false # Don't remove Android tools
          tool-cache: true # Remove image tool cache - rm -rf "$AGENT_TOOLSDIRECTORY"
          dotnet: true # rm -rf /usr/share/dotnet
          haskell: true # rm -rf /opt/ghc...
          swap-storage: true # rm -f /mnt/swapfile (4GiB)
          docker-images: false # Takes 16s, enable if needed in the future
          large-packages: false # includes google-cloud-sdk and it's slow

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      - name: Checkout Declarative Gradle
        uses: actions/checkout@v4
        with:
          repository: 'gradle/declarative-gradle'
          path: 'declarative-gradle'

      - name: Checkout Now in Android
        uses: actions/checkout@v4
        with:
          repository: 'gradle/nowinandroid'
          path: 'now-in-android'

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp now-in-android/.github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build projects before running emulator
        run: ./now-in-android/gradlew packageDemoDebug packageDemoDebugAndroidTest -p now-in-android -x :app:hiltAggregateDepsDemoDebug -x :app:hiltAggregateDepsDemoDebugUnitTest -x :app:hiltAggregateDepsDemoDebugAndroidTest -x :sync:work:hiltAggregateDepsDemoDebugAndroidTest

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          disable-animations: true
          disk-size: 6000M
          heap-size: 600M
          script: ./now-in-android/gradlew connectedDemoDebugAndroidTest --daemon -p now-in-android -x :app:hiltAggregateDepsDemoDebug -x :app:hiltAggregateDepsDemoDebugUnitTest -x :app:testDemoDebugUnitTest -x :app:hiltAggregateDepsDemoDebugAndroidTest -x :core:ui:connectedDemoDebugAndroidTest -x :core:designsystem:connectedDemoDebugAndroidTest -x :core:database:connectedDemoDebugAndroidTest -x :feature:bookmarks:connectedDemoDebugAndroidTest -x :feature:foryou:connectedDemoDebugAndroidTest -x :feature:interests:connectedDemoDebugAndroidTest -x :sync:work:hiltAggregateDepsDemoDebugAndroidTest -x :feature:settings:connectedDemoDebugAndroidTest -x :feature:topic:connectedDemoDebugAndroidTest -x :sync:work:connectedDemoDebugAndroidTest -x :feature:search:connectedDemoDebugAndroidTest -x :app:connectedDemoDebugAndroidTest

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-${{ matrix.api-level }}
          path: '**/build/reports/androidTests'
